import os
import subprocess
from logging import Logger

from datacrawler.dependencies.dépendances import initialise_les_dépendances
from datacrawler.formate_les_logs_des_process import log_process

DIAMANT_PUBLIC_KEY = '''
LS0tLS1CRUdJTiBQR1AgUFVCTElDIEtFWSBCTE9DSy0tLS0tCgptUUVOQkdNMGJTQUJDQUMrZEJYZFUxSTJIdlFCU2EwN1pWNktmQkdOSU15RXE5U0VqYit5
ZHBmNmNBVEg3ODUwCkxXUnRseXJGNmVCclNJMGhlOGYxY1JwV1YrSjJ0MTlwQzFrLzVuTHpPYytKYnIwY0JuSEo0MWtzcmJhbXpSaS8KY1BrYzg2akFQWm5I
RGUwQW1XelAxR3YxREQ0dWlGVi9TWnhKWnBCNGx2bU9hVHJ4bEd6S0QybndOQ2FVOWgvcgpIZmJYNmkvanZhV2Z4MnQwMjFqWjZsSms3cHQ1NlQwOGlSZ0d4
YW40aFk4dmFacGhIUU9Oa29HVXR3SEd1azVuClMzTXNWNkM4S01kTzAxM2d2MGw4N3cyUUNNeG1BUVEyaUFYMFFBNktqc0FBem9ldURKdUQ3ZlNhekRCRzlD
eEgKV0JNM0dwRUNGbU1xa1REMVZEU0VvN3VjNVJVT2Z3bzNkMzVyQUJFQkFBRzBQV05zWldaZlpHVjJYMmhsYkdsdgpjeUFvWTJ4bFppQndiM1Z5SUhSbGMz
UmxjaUJsYmlCc2IyTmhiQ2tnUEdobGJHbHZjMEJ2WTNSdkxtTnZiVDZKCkFVNEVFd0VJQURnV0lRUTNYdjVLUldDSUpXeWZHeUpMUEJBRVJJQzRWQVVDWXpS
dElBSWJBd1VMQ1FnSEFnWVYKQ2drSUN3SUVGZ0lEQVFJZUFRSVhnQUFLQ1JCTFBCQUVSSUM0Vkk5Y0IvNDh5ZktYN0YzcC9veFF5VFdYcXVUaQp6MUt3SzZJ
VWJGMmhiR1RVT3Zpa0ZHS1ZXNXM5dEx1bm8zemZRTDNmR3JYTXZHYXVRbTF5elU1M3BNcXZNdmdFCm5HSHdldjQvTXgyLzBNRUNFL1FEUUJGbTNJVjBUSXZa
dUxDMEpwL0FGRE5CblpVY0FQNzVyQ3dHYWVSdnptY3kKaUtHVzZLU2ZjZ3Z4OFR0U3lmcXJnQmVhM3NqUnk1UVRlblJzUC9kcVVWZTVlQkFHSnplTm43bVYw
TWlTbUdrbQoyZ21XdjJvbVFzaXBiNDYzemVmcFZabXRvOHhwUW5kYmYweEljV0tTL0hHRFNLRk9nTnJhSEgzRW5SUVorQ092CnZSakZtbXQyaDdMSWN3cU5n
WWpxNzBaaG9XVWE0TGV4a3lueHhzRlBhZmVhZk5xRkRuUzRTTmFuNm1YRmY4QzEKdVFFTkJHTTBiU0FCQ0FEd3gwL05hSHJTbmJlaHVqUXFFdGVpWjhhY25i
VURTcDY2SDlrYmtPRVFSaDNlUlBsbwpwckxsMWlHc3l5Y2xKUlJqM0VXVkltaWwwQ1lhcHprbGpnWVY5VWlkOXlwSzNlRkpCWEVyTFM3Tk54bVZidDVHCnhx
blhjZ1JiUzF6amg1M3doRHZ4dmhpRHI4QmxXUHh4RjQwNzU3WUo1UDVQbXRiU1ZRU0t6WlZXRHlsT1VyZ1QKQlVLdHA4bjFSb1NSUlkwdmxtNlJlUUhvRTk0
TStDQjUrSTM3UnhiNXplVk5vNkMrd3lRaW9MVHJZUGlwbmVzMQpGVklXVVpFQWdtR0taUUhUcm9hcEJTcW9HSTBJblRkTURXbEJBWUNSMHR5a2dpNnUyeFk1
TjhaYkZmajlZZS9sCmVIcXMvNDBIbVJXNVpPbkdxRVBMZ3gvUUFhYjZTT3Z2MDdTdEFCRUJBQUdKQVRZRUdBRUlBQ0FXSVFRM1h2NUsKUldDSUpXeWZHeUpM
UEJBRVJJQzRWQVVDWXpSdElBSWJEQUFLQ1JCTFBCQUVSSUM0VkxsQ0NBQ1NjbDJYWTZ3bQovU29CV1ozUDBkM05IRlFVMmxSRU5ZNmQ2LzJuUnlHQzQwMS9r
ZGd5UlRkbzN6ei9CZGhvZmdjUWhDVkZHZXp6ClZUV3pjV3NDdkVHWHVieFRwNjRyaXRZNVZQVWxVQVJJTWRMVEZiNVdQbm5UcnBGck95c05GaUp6eHg0cGFO
ZlYKZGFXdHNhdFF5WmxBdThyaDNRU1NZZElHb1RYeGh4QlZRdHVZbzlyeEVMcW56aTZvRktTeDgvL1BPam1rRmdQSAo4MFRYd2t4WkdmUjNwbk41OWZCZG1U
YThFVkpYWW9TaHRscW1wUFVQR2hFMXJvNEtPQjFaaCtPMEcwM2IvRzVKCldEZVhxSGlXTXRBSlVsMzBBNENKVjJ0QUdTRW1NMURDNVRQQkFRSjlvRUZPdFMx
VFY4R0c0ZkxWQzFvL2paQnEKYWRDZzl4UDI1cmJLbVFFTkJHTXh6S2tCQ0FDc0ZhdkRvTVRvRUlpNW5VVUZxSmw1YjFOTUhDS1R4SzB3SWNoZwpFTC9yUDll
NHBmYXIzNXAySVFNcWhVWlNvN3VuN0QwMGFJSENnY0NydDZ1cnpiZ1pPSHBKR2QxNzRVQy9kVkxzCjVQUmc2UDk2UCsyRmV3T202bkR1c1N5aXpubWh6SVJ0
cTN6ZXJ5SnZQOW1xSitHNU5TYUtPMEpaM21vSHA2YVoKUm1XT2s3Zk9lNGZuczNmaTJQRktCU0E4NzUzdjFqalMwajVJUWRWOUhNYmw3MmcxQXM0QzZTSWth
WSsxcmlHQwpNNnNqUEM2WnBhQWRvWFlmc3hmL1ZWYVdBRGkzOGptYUFqdkhqOU1PYVBQbmMxUTVEVTBpTXNZdDBXQUNQUmxHCnVzL1dUNWhUTEpKNUxxR3Jz
aUFzTThBNHBiWjgrcWpTTkRyU1p0dG5qQ1hLSlU0M0FCRUJBQUcwU21Oc1pXWmYKWkdWMlgyaGxiR2x2Y3lBb1kyeGxaaUIxZEdsc2FYUERxV1VnY0c5MWNp
QnNaWE1nZEdWemRITWdaVzRnYkc5agpZV3dwSUR4b1pXeHBiM05BYjJOMGJ5NWpiMjAraVFGT0JCTUJDQUE0RmlFRTZBKzhWbVJjVWgwclR6TG5DcUx3CnJS
SUtMdUFGQW1NeHpLa0NHd01GQ3drSUJ3SUdGUW9KQ0FzQ0JCWUNBd0VDSGdFQ0Y0QUFDZ2tRQ3FMd3JSSUsKTHVETk9nZ0FweEV0TUsxS05TcTFOclFMdVE5
ZmloWDhSenVMVVRVQkY0RDZXY0c2eHVmQ3dpcDZJVExtVVRXTwpBUTJ1TXFEZnJwdlZwSTB2SmFoMTZYMTVKQjZHMk03YkxoSElFM3pZMmJYL3NTcHg2b01B
ajlQbHAwZ0RQWTFnCk1tTlVZd2RNS1puVWExYlJldndxdUEwS0toUWdnZjQzeElJWHpKNUZuMktyZ3Q2T0dFN1ZzSjZxdkd3WGVZSTgKeXZvbVdOZzlPcTZa
OWJwejRGSUF2WDhDclZYMUtkdVJGSnZmYzBLSlp5bTdxTGJ5NHhZMDl2WEhCUWxUU2dBYgpMaURKRTNQa3oxL0dEdDVWaWtRRGRFWS9pYXhKWTdocjlRV0ha
OHgvMWhYNlhrbnFCOWRmRHVuZ3k2Q2dQeWh0CmwzSmRaTEJyVnEzMUZNZnozdnJNcGl2aEtJUGFHTGtCRFFSak1jeXBBUWdBbmRQWTFoSGRhT1E1TnZITmg5
SFYKeGE2UGhMczU1aDgvYW5jZU1CM1RFR0c1akdDaE9ndGRrMWhPc1h1Z3pKTHlqbExXTTlVdmVlaktCbk9hTTgwTwpkL0hyNUNCR051M3lSU2E1TnU4Y3VR
QmpGZU9adFJrWk44eUxwMktCcjZGTXFqWUtHNiszdFVYY01jc0EwNk1CCm56UzIrSU1lZzI3K1BIYlZCNlliMjIwRDJYdEpDbGZRSWxsajlTSWZQTjN6b2Rw
UDdoY1dOMTY5WHExN2xPQ1oKRmtncC9NM3VXMTZKVlVFOEdxejBwYUpBQ2d1V2hFeEFvOStSZHR2eGI0U01XRkRBa21YYlpncUVyQ0I4eUdMcwpaVTJURE9K
RkhCT2xTblRPaFJzZ0hTcU5sQUQyNmFNbitidjl6OVRpVXZMR2Yzb1plZlJPRXdvOElvSkhaSWpJCmd3QVJBUUFCaVFFMkJCZ0JDQUFnRmlFRTZBKzhWbVJj
VWgwclR6TG5DcUx3clJJS0x1QUZBbU14ektrQ0d3d0EKQ2drUUNxTHdyUklLTHVEdnFBZjZBeDNkU2Q5TXdnbDNQNm9EMUlvK25uenp4RFJ1dVcvR1BXRk1U
RmRsT1RTYwpSUTR6VEE0R0JsRmVieVExeXBjTms2Wi9oSFdscGN5dkhXRktWdi9Zei9iWWsrM0diOUt4eVVxZGVielZlbUJ3CjBKRWNVRWlSV0FzT05JMUlJ
V0NWZDNOa2VKYURQTlZMZGYxQ2FYSlpONjkzMFNkVEt2Z0JZTnBUVGZNT3JxYUwKb2JmSlBXQmlqK1lIZkZ6cDBML2JvNWtDTWp1YVpkUzQxRlRTOVdHd25a
SVpMVHJaWU1Ja3NVSVJSd1N1WTBKTwpQa24rK3lUTXE3TC8yUWh2STVRVWcrU0hkNS9NZG9paEUvMDh1YkJZWTFRZmtzTXVaMEJCenNyKzNpRitQY2wvCnJv
OWtPYW5OZ1NPbGJKOGd2ajkyUGVVbXdaL2R1QVFvYjVmbTNrRURGZz09Cj1OT1A5Ci0tLS0tRU5EIFBHUCBQVUJMSUMgS0VZIEJMT0NLLS0tLS0K
'''


def chiffre(dossier_source: str, dossier_cible: str, clef_publique: str, logger: Logger) -> None:
    logger_helios.info(
        f"Début du chiffrement des données DIAMANT à partir du répertoire {dossier_source}")
    process = subprocess.run(
        f'export DIAMANT_PUBLIC_KEY="{clef_publique}" && echo "$DIAMANT_PUBLIC_KEY" | base64 --decode | gpg --import',
        shell=True,
        stdout=subprocess.PIPE,
        stderr=subprocess.STDOUT,
        check=True
    )
    log_process(logger, process)
    for basename_du_fichier_avec_les_données in os.listdir(dossier_source):
        nom_cible_du_fichier_chiffré = os.path.join(
            dossier_cible,
            basename_du_fichier_avec_les_données + ".gpg"
        )
        fichier_avec_les_données = os.path.join(
            dossier_source,
            basename_du_fichier_avec_les_données
        )
        process = subprocess.run(
            f'gpg --output {nom_cible_du_fichier_chiffré} --encrypt --recipient clef_dev_helios'
            f' {fichier_avec_les_données}',
            shell=True,
            check=True
        )
        log_process(logger, process)
        logger.info(f"Fichier {fichier_avec_les_données} chiffré")
    nombre_de_fichiers_chiffrés = len(os.listdir(dossier_cible))
    logger_helios.info(
        f"Fin du chiffrement des données DIAMANT. {nombre_de_fichiers_chiffrés} fichiers csv"
        f" ont été chiffrés dans le répertoire {dossier_cible}")


if __name__ == "__main__":
    logger_helios, variables_d_environnement = initialise_les_dépendances()
    dossier_où_sauvegarder_les_données_diamant_chiffrées = variables_d_environnement["DIAMANT_ENCRYPTED_DATA_PATH"]
    dossier_avec_les_csv_diamant = variables_d_environnement["DIAMANT_DATA_PATH"]
    chiffre(dossier_avec_les_csv_diamant, dossier_où_sauvegarder_les_données_diamant_chiffrées, DIAMANT_PUBLIC_KEY,
            logger_helios)
