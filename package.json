{
  "name": "helios",
  "version": "1.5.1",
  "private": true,
  "scripts": {
    "amibroken": "yarn deadcode && yarn lint && yarn typecheck && yarn test && yarn build",
    "bash:production": "scalingo -a helios run bash",
    "bash:production:2xl": "scalingo -a helios run --size 2XL bash",
    "build": "next build",
    "deadcode": "ts-prune --ignore 'src/pages'",
    "decryptDiamant:local": "pipenv run decrypt_diamant",
    "decryptDiamant": "python -m datacrawler.déchiffre_diamant",
    "depcheck": "depcheck --ignore-patterns=spikes,.venv",
    "dev": "yarn start:db && next dev",
    "encryptDiamant:local": "pipenv run encrypt_diamant",
    "format:typescript": "prettier --write \"**/*.+(js|ts|json|tsx|jsx)\"",
    "lint": "yarn lint:typescript && yarn lint:python",
    "lint:typescript": "npx eslint src database download_data_source",
    "lint:typescript:fix": "yarn lint:typescript --fix",
    "lint:python": "pipenv run lint",
    "lint:python:fix": "pipenv run format",
    "lint:scss": "stylelint '**/*.module.css'",
    "lint:scss:fix": "yarn lint:scss --fix",
    "migrations:up": "npx typeorm-ts-node-commonjs migration:run -d ./database/dataSource.ts",
    "migrations:down": "npx typeorm-ts-node-commonjs migration:revert -d ./database/dataSource.ts",
    "migrations:create": "npx typeorm-ts-node-commonjs migration:create",
    "psql:local": "docker-compose up -d postgres && docker exec -it helios_db psql -U helios helios",
    "psql:production": "scalingo -a helios pgsql-console",
    "postinstall": "husky install",
    "populateDatabase": "yarn retrieveFiness && yarn retrieveDiamant && yarn retrieveHapi && yarn decryptDiamant && yarn updateEJ && yarn updateET && yarn updateAllocationRessource && yarn updateActivitésMédicoSociaux && yarn updateActivitésSanitaire && yarn updateActivitesSanitairesMensuel && yarn updateActivitesSanitairesMensuelEJ && yarn updateAutorisationsMédicoSocial && yarn updateAutorisationsSanitaire && yarn updateCpomMedicoSocial && yarn updateBudgetEtFinancesMedicoSocial && yarn updateRessourcesHumainesMedicoSocial && yarn updateActivitéSanitaireEntitéJuridique && yarn updateCapacitéSanitaireEntitéJuridique && yarn updateBudgetEtFinancesEntiteJuridique && yarn retreieveAndCheckAndUpdateReclamations && yarn retreieveAndCheckAndUpdateEvenementsIndesirables && yarn retreieveAndCheckAndUpdateInspections",
    "populateDatabase:local": "yarn retrieveFiness && yarn retrieveDiamant && yarn retrieveHapi && yarn decryptDiamant:local && yarn updateEJ && yarn updateET && yarn updateActivitésMédicoSociaux:local && yarn updateActivitésSanitaire:local && yarn updateAutorisationsMédicoSocial:local && yarn updateAutorisationsSanitaire:local && yarn updateCpomMedicoSocial:local && yarn updateBudgetEtFinancesMedicoSocial:local && yarn updateRessourcesHumainesMedicoSocial:local && yarn updateActivitéSanitaireEntitéJuridique:local && yarn updateCapacitéSanitaireEntitéJuridique:local && yarn updateBudgetEtFinancesEntiteJuridique:local && yarn retreieveAndCheckAndUpdateReclamations:local && yarn retreieveAndCheckAndUpdateEvenementsIndesirables:local && yarn retreieveAndCheckAndUpdateInspections:local && yarn updateAllocationRessource:local && yarn updateActivitesSanitairesMensuel:local && yarn updateActivitesSanitairesMensuelEJ:local",
    "populateDatabaseUsers": "python -m datacrawler.import_utilisateurs",
    "populateDatabaseUsers:local": "pipenv run populate_app_users",
    "retrieveFiness": "ts-node -T download_data_source/infrastructure/controllers/téléchargeLesDonnéesBrutesDeFinessCron.ts",
    "retrieveDiamant": "ts-node -T download_data_source/infrastructure/controllers/téléchargeLesDonnéesBrutesDiamantCron.ts",
    "retrieveSirec": "ts-node -T download_data_source/infrastructure/controllers/téléchargeLesDonnéesBrutesSirecCron.ts",
    "retrieveSiicea": "ts-node -T download_data_source/infrastructure/controllers/téléchargeLesDonnéesBrutesSiiceaCron.ts",
    "retrieveSivss": "ts-node -T download_data_source/infrastructure/controllers/téléchargeLesDonnéesBrutesSivssCron.ts",
    "retrieveHapi": "ts-node -T download_data_source/infrastructure/controllers/téléchargeLesDonnéesBrutesHapiCron.ts",
    "updateEJ": "TS_NODE_TRANSPILE_ONLY=true node --loader ts-node/esm --max-old-space-size=8192 download_data_source/infrastructure/controllers/metsÀJourLesEntitésJuridiquesCron.ts",
    "updateET": "TS_NODE_TRANSPILE_ONLY=true node --loader ts-node/esm --max-old-space-size=8192 download_data_source/infrastructure/controllers/metsÀJourLesÉtablissementsTerritoriauxCron.ts",
    "updateActivitésMédicoSociaux": "python -m datacrawler.ajoute_les_activités_des_établissements_médico_sociaux",
    "updateActivitésMédicoSociaux:local": "pipenv run populate_activite_et_medico_social",
    "updateActivitésSanitaire": "python -m datacrawler.ajoute_les_activités_des_établissements_sanitaires",
    "updateActivitésSanitaire:local": "pipenv run populate_activite_et_sanitaire",
    "updateAutorisationsMédicoSocial": "python -m datacrawler.ajoute_les_autorisations_des_établissements_médico_sociaux",
    "updateAutorisationsMédicoSocial:local": "pipenv run populate_autorisation_et_capacite_medico_social",
    "updateAutorisationsSanitaire": "python -m datacrawler.ajoute_les_autorisations_des_établissements_sanitaires",
    "updateAutorisationsSanitaire:local": "pipenv run populate_autorisation_et_capacite_sanitaire",
    "updateCpomMedicoSocial": "python -m datacrawler.ajoute_le_cpom_des_établissements_médico_sociaux",
    "updateCpomMedicoSocial:local": "pipenv run populate_cpom_medico_social",
    "updateBudgetEtFinancesMedicoSocial": "python -m datacrawler.ajoute_le_bloc_budget_et_finances_des_établissements_médico_sociaux",
    "updateBudgetEtFinancesMedicoSocial:local": "pipenv run populate_budget_et_finances_medico_social",
    "updateBudgetEtFinancesEntiteJuridique": "python -m datacrawler.ajoute_le_bloc_budget_et_finances_des_entite_juridiques",
    "updateBudgetEtFinancesEntiteJuridique:local": "pipenv run populate_budget_et_finances_entite_juridique",
    "updateRessourcesHumainesMedicoSocial": "python -m datacrawler.ajoute_le_bloc_ressources_humaines_des_établissements_médico_sociaux",
    "updateRessourcesHumainesMedicoSocial:local": "pipenv run populate_ressoures_humaines_medico_social",
    "updateActivitéSanitaireEntitéJuridique": "python -m datacrawler.agrégation_activité_sanitaire",
    "updateActivitéSanitaireEntitéJuridique:local": "pipenv run populate_activites_sanitaire_entites_juridiques",
    "updateCapacitéSanitaireEntitéJuridique": "python -m datacrawler.agrégation_capacité_sanitaire",
    "updateCapacitéSanitaireEntitéJuridique:local": "pipenv run populate_capacites_sanitaire_entites_juridiques",
    "updateReclamationsEtablissements": "python -m datacrawler.import_reclamations",
    "updateReclamationsEtablissements:local": "pipenv run populate_reclamations",
    "checkReclamationsEtablissements": "ts-node -T download_data_source/infrastructure/controllers/controleLesDonnesSirecCron.ts",
    "retreieveAndCheckAndUpdateReclamations": "yarn retrieveSirec && yarn checkReclamationsEtablissements && yarn updateReclamationsEtablissements",
    "retreieveAndCheckAndUpdateReclamations:local": "yarn retrieveSirec && yarn checkReclamationsEtablissements && yarn updateReclamationsEtablissements:local",
    "updateEvenementsIndesirables": "python -m datacrawler.import_evenements_indesirables",
    "updateEvenementsIndesirables:local": "pipenv run populate_evenements_indesirables",
    "updateAllocationRessource": "python -m datacrawler.import_allocation_ressource_hapi",
    "updateAllocationRessource:local": "pipenv run populate_allocation_ressource",
    "checkEvenementsIndesirables": "python -m datacrawler.check_downloaded_sivss_file",
    "checkEvenementsIndesirables:local": "pipenv run check_downloaded_sivss_file",
    "retreieveAndCheckAndUpdateEvenementsIndesirables": "yarn retrieveSivss && yarn checkEvenementsIndesirables && yarn updateEvenementsIndesirables",
    "retreieveAndCheckAndUpdateEvenementsIndesirables:local": "yarn retrieveSivss && yarn checkEvenementsIndesirables:local && yarn updateEvenementsIndesirables:local",
    "checkInspections": "python -m datacrawler.check_downloaded_siicea_file",
    "checkInspections:local": "pipenv run check_downloaded_siicea_file",
    "updateInspections": "python -m datacrawler.import_inspections",
    "updateInspections:local": "pipenv run populate_inspections",
    "retreieveAndCheckAndUpdateInspections": "yarn retrieveSiicea && yarn checkInspections && yarn updateInspections",
    "retreieveAndCheckAndUpdateInspections:local": "yarn retrieveSiicea && yarn checkInspections:local && yarn updateInspections:local",
    "updateActivitesSanitairesMensuel": "python -m datacrawler.import_activites_mensuel",
    "updateActivitesSanitairesMensuel:local": "pipenv run populate_activites_mensuel",
    "updateActivitesSanitairesMensuelEJ": "python -m datacrawler.import_activites_mensuel_entite_juridique",
    "updateActivitesSanitairesMensuelEJ:local": "pipenv run populate_activites_mensuel_ej",
    "start": "next start",
    "start:db": "docker-compose down && docker-compose up -d && bash -c \"while ! docker-compose logs | grep -q 'listening on IPv4 address'; do echo 'Waiting for database'; sleep 0.5; done\"; yarn migrations:up",
    "test": "yarn test:typescript && yarn test:python",
    "test:accessibility": "lhci autorun",
    "test:mutation": "env-cmd -f .env.test npx stryker run",
    "test:typescript": "NODE_ENV=test yarn migrations:up && jest --runInBand",
    "test:typescript:back": "NODE_ENV=test yarn migrations:up && jest --coverage --testMatch '<rootDir>/(src/backend|download_data_source)/**/*(*.)@(test).ts' --runInBand --colors --detectOpenHandles",
    "test:typescript:front": "NODE_ENV=test yarn migrations:up && jest --coverage --testMatch '<rootDir>/src/frontend/**/*(*.)@(test).ts?(x)' --max-workers 4 --colors",
    "test:typescript:watch": "yarn test:typescript --watch",
    "test:typescript:coverage": "yarn test:typescript --coverage",
    "test:python": "NODE_ENV=test yarn migrations:up && pipenv run test",
    "test:python:coverage": "NODE_ENV=test yarn migrations:up && pipenv run test_coverage",
    "test:python:watch": "NODE_ENV=test yarn migrations:up && pipenv run test_watch",
    "typecheck": "yarn typecheck:typescript && yarn typecheck:python",
    "typecheck:typescript": "tsc",
    "typecheck:python": "pipenv run typecheck"
  },
  "dependencies": {
    "@gouvfr/dsfr": "1.13",
    "@next/bundle-analyzer": "^15.1.7",
    "@sentry/nextjs": "7.120.0",
    "@types/bcrypt": "^5.0.2",
    "@types/dompurify": "^3.2.0",
    "@types/joi": "^17.2.3",
    "@types/papaparse": "^5.3.15",
    "basic-ftp": "^5.0.5",
    "bcrypt": "^5.1.1",
    "chart.js": "^3.8.0",
    "chartjs-plugin-datalabels": "^2.0.0",
    "cookie": "^1.0.2",
    "cookies-next": "^4.3.0",
    "csv-parser": "^3.2.0",
    "date-fns": "^4.1.0",
    "dompurify": "^3.2.4",
    "dotenv-defaults": "^5.0.2",
    "joi": "^17.13.3",
    "jsonwebtoken": "^9.0.2",
    "next": "14",
    "next-auth": "^4.24.9",
    "nuqs": "^1.20.0",
    "papaparse": "^5.5.2",
    "pg": "^8.7.3",
    "react": "18.3.1",
    "react-chartjs-2": "^4.2.0",
    "react-dom": "18.3.1",
    "react-to-print": "^2.15.1",
    "ssh2": "^1.9.0",
    "ssh2-sftp-client": "^8.0.0",
    "tarteaucitronjs": "^1.16.1",
    "ts-node": "^10.9.2",
    "typeorm": "^0.3.20",
    "typescript": "5.7.3",
    "xlsx": "^0.18.5",
    "xml-js": "^1.6.11"
  },
  "devDependencies": {
    "@lhci/cli": "^0.14.0",
    "@stryker-mutator/core": "^8.7.1",
    "@stryker-mutator/jest-runner": "^8.7.1",
    "@stryker-mutator/typescript-checker": "^8.7.1",
    "@swc/core": "^1.10.18",
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.2.0",
    "@types/dotenv-defaults": "^2.0.4",
    "@types/jest": "^29.5.14",
    "@types/jsonwebtoken": "^9.0.2",
    "@types/node": "22.13.5",
    "@types/react": "18.3.1",
    "@types/react-dom": "18.3.1",
    "@types/ssh2": "^0.5.52",
    "@types/ssh2-sftp-client": "^7.0.1",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "depcheck": "^1.4.7",
    "env-cmd": "^10.1.0",
    "eslint": "8.57.1",
    "eslint-config-next": "15.2.0",
    "eslint-config-prettier": "^10.0.2",
    "eslint-plugin-jest": "^26.8.7",
    "eslint-plugin-jest-formatting": "^3.1.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-testing-library": "^7.1.1",
    "husky": "^7.0.4",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-mock-extended": "^3.0.7",
    "next-router-mock": "^0.9.13",
    "prettier": "^3.5.2",
    "stylelint": "^16.14.0",
    "ts-prune": "^0.10.3"
  },
  "resolutions": {
    "got": "^11.8.5"
  },
  "engines": {
    "node": "22.14"
  },
  "packageManager": "yarn@4.6.0"
}
